/* ===============================
   全体レイアウト
================================= */
.layout {
  display: flex;
  justify-content: center;
  align-items: center;   
  gap: 24px;
  padding: 40px;
  background: #eef1f6;
  font-family: 'Inter', 'Noto Sans JP', sans-serif;
  min-height: 100vh;
  box-sizing: border-box;
}

/* ===============================
   中央表示コンテナ（select/create共通）
================================= */
.problem-set-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  min-height: 80vh;
  padding: 20px;
}

.problem-set-container .panel {
  background: #fff;
  border-radius: 16px;
  padding: 36px 32px; /* 上下少し余白を増やす */
  box-shadow: 0 6px 20px rgba(0,0,0,0.08); /* 影を少し深める */
  animation: fadeIn 0.3s ease;
  width: 100%;
  max-width: 720px; /* 少し広めに調整 */
  margin: 0 auto;
  text-align: center;
}

/* ===============================
   アニメーション
================================= */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(12px); }
  to { opacity: 1; transform: translateY(0); }
}

/* ===============================
   select画面ボタン・入力
================================= */
.centerBox {
  width: 100%;
  max-width: 520px; /* 少し広げて中央揃え */
  margin: 0 auto;
  text-align: center;
}

.selectBtn {
  width: 100%;
  padding: 14px 0; /* 高さを少し増やす */
  background: #f7f9fc;
  border: 1px solid #dce2ec;
  border-radius: 10px; /* 角丸を少し丸く */
  font-weight: 500;
  cursor: pointer;
  transition: 0.2s;
}

.selectBtn:hover {
  background: #e9f2ff;
  border-color: #a9c8ff;
  transform: translateY(-2px);
}

.list {
  list-style: none;
  padding: 0;
  margin: 20px 0; /* 上下の余白を少し増やす */
}

.newSet {
  display: flex;
  gap: 10px;
  margin-top: 24px; /* 上余白を統一 */
}

.newSet input {
  flex: 1;
  padding: 12px;
  border: 1px solid #ccd5e3;
  border-radius: 10px;
}

.newSet button {
  background: #0069ff;
  border: none;
  color: white;
  border-radius: 10px;
  padding: 12px 16px;
  font-weight: 600;
  cursor: pointer;
  transition: 0.2s;
}

.newSet button:hover {
  background: #0053d6;
}

/* ===============================
   フォーム・入力欄
================================= */
.formRow {
  margin-bottom: 24px;
}

label {
  font-weight: 600;
  margin-bottom: 8px;
  display: block;
  color: #333;
  font-size: 15px;
}

input {
  width: 100%;
  padding: 12px;
  border-radius: 10px;
  border: 1px solid #d0d7e2;
  transition: 0.2s;
}

input:focus {
  border-color: #007bff;
  box-shadow: 0 0 6px rgba(0, 123, 255, 0.3);
  outline: none;
}

/* ===============================
   タイプ選択ボタン
================================= */
.typeSelector {
  display: flex;
  gap: 12px;
  margin-bottom: 16px;
}

.typeSelector button {
  flex: 1;
  padding: 10px 0;
  border-radius: 10px;
  border: 1px solid #cbd5e0;
  background: #f7fafc;
  cursor: pointer;
  transition: 0.2s;
  font-weight: 500;
}

.typeSelector button.active {
  background: #007bff;
  color: white;
  border-color: #007bff;
}

.typeSelector button:hover:not(.active) {
  background: #edf2f7;
}

/* Tidy choice rows: textarea grows, button controls compact, responsive stack on small screens */
.choiceRow {
  display: flex;
  gap: 8px;
  align-items: center; /* vertically center button next to multi-line textarea */
  flex-wrap: nowrap; /* keep button on the same row */
}
.choiceRow textarea {
  flex: 1 1 auto;
  min-width: 0; /* allow shrinking inside flex */
  min-height: 36px;
  max-height: 200px;
  resize: none;
  padding: 8px;
  border-radius: 6px;
  border: 1px solid #000000; /* match question/answer inputs */
  background: #fff;
  font-size: 14px;
}
.choiceRow textarea:focus {
  border-color: #007bff;
  box-shadow: 0 0 6px rgba(0, 123, 255, 0.18);
  outline: none;
}
.choiceRow .setCorrect {
  flex: 0 0 auto;
  background: transparent;
  border: 1px solid var(--muted-border, #d0d0d0);
  padding: 6px 8px;
  border-radius: 6px;
  font-size: 13px;
  color: var(--muted-text, #333);
  cursor: pointer;
  height: 36px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}
.choiceRow .setCorrect.active {
  background: var(--accent, #2b9bf4);
  color: #fff;
  border-color: transparent;
}
/* removed checkmark-specific styles */
.choiceRow .delChoice {
  flex: 0 0 auto;
  margin-left: 4px;
}
.choicesFooter {
  display: flex;
  gap: 8px;
  margin-top: 12px;
  align-items: center;
}
.choicesFooter .btn {
  padding: 8px 12px;
}

@media (max-width: 520px) {
  /* On small screens keep the textarea and buttons on one line if possible; allow taller textarea while button stays to the right */
  .choiceRow {
    align-items: center;
    flex-wrap: nowrap;
  }
  .choiceRow .setCorrect,
  .choiceRow .delChoice {
    margin-top: 0;
  }
  .choicesFooter {
    flex-direction: row;
    justify-content: flex-start;
  }
}
/* ===============================
   選択肢欄
================================= */
.choiceRow {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 8px;
}

.choiceRow input[type="text"] {
  flex: 1;
  padding: 10px;
}

.choiceRow .delChoice {
  background: #ff6b6b;
  color: white;
  border: none;
  border-radius: 8px;
  padding: 6px 8px;
  cursor: pointer;
  transition: 0.12s;
  height: 36px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.choiceRow .delChoice:hover {
  background: #e14a4a;
}

.choicesBox > button {
  margin-top: 8px;
  background: #f1f3f5;
  border: none;
  border-radius: 8px;
  padding: 8px 12px;
  cursor: pointer;
  transition: 0.2s;
}

.choicesBox > button:hover {
  background: #e2e6ea;
}

/* ===============================
   アクションボタン
================================= */
.actions {
  display: flex;
  gap: 14px;
  margin-top: 28px;
  flex-wrap: wrap;
  justify-content: center;
}

.actions button {
  background: #007bff;
  color: #fff;
  border: none;
  border-radius: 12px;
  padding: 14px 24px;
  font-weight: 600;
  cursor: pointer;
  transition: background 0.2s, transform 0.1s;
}

.actions button:hover {
  background: #0069d9;
  transform: translateY(-1px);
}

/* ===============================
   問題一覧
================================= */
.problemList {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));
  gap: 24px;
  list-style: none;
  padding: 0;
  margin-top: 24px;
}

.problemItem {
  background: #fff;
  border-radius: 16px;
  padding: 20px;
  border: 1px solid #e5e7eb;
  box-shadow: 0 4px 12px rgba(0,0,0,0.06);
  transition: 0.2s;
}

.problemItem:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 18px rgba(0,0,0,0.1);
}

.problemItem strong {
  font-size: 16px;
  display: block;
  margin-bottom: 8px;
}

.problemItem p {
  color: #007bff;
  font-size: 14px;
  margin-top: 10px;
}

.problemItem button {
  background: #ff5c5c;
  color: white;
  border: none;
  border-radius: 8px;
  padding: 8px 12px;
  cursor: pointer;
  transition: 0.2s;
}

.problemItem button:hover {
  background: #e14a4a;
}

/* ===============================
   レスポンシブ
================================= */
@media (max-width: 768px) {
  .layout {
    flex-direction: column;
    padding: 20px;
  }

  .panel {
    padding: 24px;
  }

  .centerBox {
    max-width: 100%;
  }

  .problemList {
    grid-template-columns: 1fr;
    gap: 16px;
  }
}
